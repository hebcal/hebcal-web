<script nonce="<%=nonce%>" src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.18/index.global.min.js" integrity="sha384-w+/36vzr+9muA3AD1xeLMQQj4GbMTCfzuUVqeZfjlk8S6UXWT5WMKuO8j+lxmtiH" crossorigin="anonymous"></script>
<script nonce="<%=nonce%>"><%- await include('hdate.bundle.min.js') %></script>
<script nonce="<%=nonce%>">
document.addEventListener('DOMContentLoaded', function() {
function getHebMonthName(dt) {
  const abs = hdate.greg2abs(dt);
  const hdt = hdate.abs2hebrew(abs);
  const str = hdate.getMonthName(hdt.mm, hdt.yy);
  hdt.monthName = str.replace(/'/g, '’');
  return hdt;
}
function makeHebMonthRangeStr(startDt, endDt) {
  const start = getHebMonthName(startDt);
  const end = getHebMonthName(endDt);
  let str = start.monthName;
  if (end.yy !== start.yy) {
    str += ' ' + start.yy;
  }
  if (end.mm !== start.mm) {
    str += ' – ' + end.monthName;
  }
  str += ' ' + end.yy;
  return str;
}
let hebmonthEl = null;
function monthSubtitle(view) {
  const end = new Date(view.currentEnd.getTime());
  end.setDate(end.getDate() - 1);
  const s = makeHebMonthRangeStr(view.currentStart, end);
  if (hebmonthEl) {
    hebmonthEl.innerText = s;
  }
}
 let calendar = null;
 const calendarEl = document.getElementById('calendar');
 calendarEl.style.display = 'none';
 const listViewEl = document.getElementById('list-view');
 const toggleMonth = document.getElementById('toggle-month');
 toggleMonth.addEventListener('change', function(event) {
  const fc = this.checked;
  calendarEl.style.display = fc ? 'block' : 'none';
  listViewEl.style.display = fc ? 'none' : 'block';
  if (fc) {
   makeFullCalendar();
   calendar.render();
   const toolbarEl = document.querySelector('.fc-header-toolbar .fc-toolbar-chunk:nth-child(2)');
   if (toolbarEl && !hebmonthEl) {
      hebmonthEl = document.createElement('h5');
      hebmonthEl.id = 'hebmonth';
      hebmonthEl.className = 'text-burgundy ms-0 mt-1';
      toolbarEl.appendChild(hebmonthEl);
      monthSubtitle(calendar.view);
    }
  }
  toggleMonth.blur();
 });
 function makeFullCalendar() {
  if (calendar) {
    return calendar;
  }
  const opts = {
    initialView: 'dayGridMonth',
    headerToolbar: {
      left: 'prev next',
      center: 'title',
      right: '',
    },
    initialDate: '<%=isoDateStart%>',
    timeZone: 'local',
    eventDisplay: 'block',
    dayCellContent: function(info, create) {
      const abs = hdate.greg2abs(info.date);
      const hdt = hdate.abs2hebrew(abs);
      const monthName0 = hdate.getMonthName(hdt.mm, hdt.yy);
      const monthName = monthName0.replace(/'/g, '’');
      let dayNumberText = `${hdt.dd} ${monthName}`;
      if (hdt.dd === 1) {
        dayNumberText += ` ${hdt.yy}`;
      }
      const el0 = create('span', {class: 'fc-hdate d-none d-md-inline'}, dayNumberText);
      return create('span', null, el0, info.dayNumberText);
    },
    events: function(info, successCallback, failureCallback) {
      const url = new URL(document.location.href);
      url.pathname = '/hebcal';
      const sp = url.searchParams;
      sp.set('v', '1'); // Required, version 1
      sp.set('cfg', 'fc'); // Required, mode = FullCalendar
      sp.set('start', info.startStr.substring(0, 10));
      sp.set('end', info.endStr.substring(0, 10));
      sp.set('i', '<%=il?"on":"off"%>');  // Israel or Diaspora holiday schedule
      sp.set('maj', 'on'); // Major holidays
      sp.set('min', 'on'); // Minor holidays
      sp.set('nx', 'on'); // Rosh Chodesh
      sp.set('mf', 'on'); // Minor fasts
      sp.set('ss', 'on'); // Special Shabbatot
      sp.set('mod', 'on'); // Modern holidays
      sp.set('lg', 's'); // Sephardic transliterations
      const fetchOptions = {
        method: 'GET',
        credentials: 'omit',
        mode: 'cors',
      };
      fetch(url.href, fetchOptions).then(function(fetchRes) {
        if (fetchRes.ok) {
          fetchRes.json().then(function(parsedResponse) {
            const events = parsedResponse.map(function(ev) {
              if (ev.emoji) {
                ev.title += '\u00a0' + ev.emoji;
              }
              if (typeof ev.url == 'string') {
                const u = new URL(ev.url);
                const p = u.pathname;
                if (p.startsWith('/h/')) {
                  ev.url = '/holidays/' + p.substring(3);
                }
              }
              return ev;
            });
            successCallback(events);
          }, function(err) {
            failureCallback(err);
          });
        } else {
          failureCallback('Request failed');
        }
      }).catch(function(err) {
        failureCallback(err);
      });
    },
  };
  calendar = new FullCalendar.Calendar(calendarEl, opts);
  calendar.on('datesSet', function(dateInfo) {
    monthSubtitle(dateInfo.view);
  });
  document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowLeft' && !e.metaKey) {
      calendar.prev();
    } else if (e.key === 'ArrowRight' && !e.metaKey) {
      calendar.next();
    }
  });
  var _paq = window._paq = window._paq || [];
  _paq.push(['trackEvent', 'Interaction', 'fullcalendar', '<%=year%>']);
  return calendar;
 }
});
</script>
